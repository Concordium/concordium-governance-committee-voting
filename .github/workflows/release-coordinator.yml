name: 'Publish Coordinator tool'
on:
  # The release action always requires a tag to publish a release.
  # This job will run when a release/coordinator-tool/$VERSION
  # tag is created.
  push:
    tags:
      - release/coordinator-tool/*.*.*
  workflow_dispatch: # allows manual trigger from main

jobs:
  build:
    name: build ${{ matrix.settings.platform }}
    strategy:
      fail-fast: true
      matrix:
        settings:
          - platform: 'macos-latest'
            bin: 'macos-arm'
            args: '--target aarch64-apple-darwin' # for Arm based macs (M1 and above).
          - platform: 'macos-latest'
            bin: 'macos-intel'
            args: '--target x86_64-apple-darwin' # for Intel based macs.
          - platform: 'ubuntu-22.04'
            bin: 'ubuntu'
            args: ''
          - platform: 'windows-latest'
            bin: 'windows'
            args: ''
    runs-on: ${{ matrix.settings.platform }}
    steps:
      - name: Support longpaths on Windows
        if: matrix.settings.platform == 'windows-latest'
        run: git config --system core.longpaths true
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.bin == 'macos-arm' && 'aarch64-apple-darwin' || matrix.settings.bin == 'macos-intel' && 'x86_64-apple-darwin' || '' }}
      - name: Build election-coordinator binary
        run: cargo build --release --manifest-path coordinator-tool/Cargo.toml ${{ matrix.settings.args }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.settings.bin }}
          path: |
            target/release/election-coordinator
            target/aarch64-apple-darwin/release/election-coordinator
            target/x86_64-apple-darwin/release/election-coordinator
            target/release/election-coordinator.exe

  release:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - run: |
          mv binary-macos-arm/aarch64-apple-darwin/release/election-coordinator election-coordinator-darwin-aarch64
          mv binary-macos-intel/x86_64-apple-darwin/release/election-coordinator election-coordinator-darwin-amd64
          mv binary-windows/release/election-coordinator.exe election-coordinator-windows-amd64.exe
          mv binary-ubuntu/release/election-coordinator election-coordinator-linux-amd64
      - uses: actions/checkout@v4
      - name: Get version from Cargo.toml
        id: get_version
        run: |
          VERSION=$(grep '^version =' coordinator-tool/Cargo.toml | sed -E 's/version = "([^"]+)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          name: Coordinator tool v${{ steps.get_version.outputs.VERSION }}
          files: |
            election-coordinator-*
