on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    # Don't run on draft PR's, see: https://github.com/orgs/community/discussions/25722#discussioncomment-3248917
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - contracts/**/*

name: check crates

env:
  RUST_FMT: nightly-2023-04-01
  RUST_VERSION: "1.67"
  CARGO_CONCORDIUM_VERSION: "3.0.0"

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crates:
          - contracts/concordium-governance-committee-election/Cargo.toml
          - election-server/Cargo.toml

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run cargo check
        run: |
          rustup default ${{ env.RUST_FMT }}
          cargo check --manifest-path=${{ matrix.crates }}
  rustfmt:
    name: format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crates:
          - contracts/concordium-governance-committee-election/Cargo.toml
          - election-server/Cargo.toml

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run cargo fmt
        run: |
          rustup default ${{ env.RUST_FMT }}
          rustup component add rustfmt
          cargo fmt --manifest-path=${{ matrix.crates }} -- --check

  test-contracts:
    name: test contracts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        contracts:
          - contracts/concordium-governance-committee-election

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download and install Cargo Concordium
        run: |
          CARGO_CCD=cargo-concordium_${{ env.CARGO_CONCORDIUM_VERSION }}
          wget https://distribution.concordium.software/tools/linux/$CARGO_CCD
          chmod +x $CARGO_CCD
          sudo mv $CARGO_CCD /usr/bin/cargo-concordium

      - name: Run cargo concordium test
        run: |
          rustup default ${{ env.RUST_VERSION }}
          rustup target install wasm32-unknown-unknown
          cargo concordium test --out "${{ matrix.contracts }}/concordium-out/module.wasm.v1" -- --manifest-path "${{ matrix.contracts }}/Cargo.toml"
