# Checks the frontend apps for build, lint, and formatting errors
name: check apps

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main, release**, feature**]
  pull_request:
    branches: [main, release**, feature**]
    # Don't run on draft PR's, see: https://github.com/orgs/community/discussions/25722#discussioncomment-3248917
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - apps/**/*
  # Allows us to run the workflow manually from the Actions tab
  workflow_dispatch:

env:
  DUMMY: 1 # For cache busting.
  NODE_VERSION: "18.16.0"
  RUST_VERSION: "1.74"
  RUST_FMT: nightly-2023-04-01-x86_64-unknown-linux-gnu
  CARGO_CONCORDIUM_VERSION: "3.2.0"
  CCD_ELECTION_CONTRACT_ADDRESS: <0,0> # Otherwise build will fail

jobs:
  deps:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./apps
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
          cache-dependency-path: "**/yarn.lock"

      - name: Cache dependencies
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            ./apps/node_modules
            ./apps/voting/node_modules
            ./apps/guardian/node_modules
            ./apps/shared/node_modules
            ./apps/ccd-bootstrap/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('./apps/yarn.lock') }}-${{ env.DUMMY }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Get dependencies
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: |
          yarn install --immutable
          cd ./electionguard-bindings
          yarn build

  generate-client:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-22.04
    needs: deps
    defaults:
      run:
        working-directory: ./apps
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Cache election contract client
        id: election-contract-cache
        uses: actions/cache@v3
        with:
          path: |
            ./apps/shared/__generated__/election-contract
          key: ${{ runner.os }}-election-contract-${{ hashFiles('./contracts/concordium-governance-committee-election/src/lib.rs') }}-${{ env.DUMMY }}
          restore-keys: |
            ${{ runner.os }}-election-contract

      - uses: actions/setup-node@v3
        if: ${{ steps.election-contract-cache.outputs.cache-hit != 'true' }}
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
          cache-dependency-path: "**/yarn.lock"

      - name: Download and install Cargo Concordium
        if: ${{ steps.election-contract-cache.outputs.cache-hit != 'true' }}
        run: |
          CARGO_CCD=cargo-concordium_${{ env.CARGO_CONCORDIUM_VERSION }}
          wget https://distribution.concordium.software/tools/linux/$CARGO_CCD
          chmod +x $CARGO_CCD
          sudo mv $CARGO_CCD /usr/bin/cargo-concordium

      - name: Restore dependencies
        if: ${{ steps.election-contract-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/restore@v3
        with:
          path: |
            ./apps/node_modules
            ./apps/voting/node_modules
            ./apps/guardian/node_modules
            ./apps/shared/node_modules
            ./apps/ccd-bootstrap/node_modules
          key: ${{ runner.os }}-yarn

      - name: Generate contract client
        if: ${{ steps.election-contract-cache.outputs.cache-hit != 'true' }}
        working-directory: ./apps/shared
        run: |
          rustup default ${{ env.RUST_VERSION }}
          rustup target install wasm32-unknown-unknown
          yarn generate-contract-client

  check:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-22.04
    needs: [deps, generate-client]
    defaults:
      run:
        working-directory: apps
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
          cache-dependency-path: "**/yarn.lock"

      - name: Restore dependencies
        uses: actions/cache/restore@v3
        with:
          path: |
            ./apps/node_modules
            ./apps/voting/node_modules
            ./apps/guardian/node_modules
            ./apps/shared/node_modules
            ./apps/ccd-bootstrap/node_modules
          key: ${{ runner.os }}-yarn

      - name: Restore generated contract client
        uses: actions/cache/restore@v3
        with:
          path: |
            ./apps/shared/__generated__/election-contract
          key: ${{ runner.os }}-election-contract

      - name: Build
        run: yarn build:all

      - name: Lint
        run: yarn lint:all && yarn fmt-check:all
